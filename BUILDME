#!/bin/bash
set -o errexit
set -o pipefail
set -o nounset
shopt -s extglob

**/*.o: () {
  depends '**/*.c'
  build () {
    "$CC" -o $target -c $source
  }
}

.*? () { {
  local t=1
  echo "test" 
  return 1
} }

inline () {
  local fn="$(declare -f "$1")"
  expr match "$fn" "$1"$' () \n{\(.*\)}$'
}

# convert a indexed or associative array value to a properly quoted string
tostring () {
  local var="$(declare -p "$1")"
  eval echo "${var/#declare -? $1=}"
}

# split a string using a delimiter character
split () {
  local IFS="$1"
  set -- $2
  local array=("$@")
  tostring array
}
t='bad'
function testt() {
  # declare -[aA] necessary for deserialization
  local t
  declare -a t="$(split '|=' '111=222=333|xxx')"
  echo "$t"
}
testt


# mapfile < <(declare -F)
# for func in "${MAPFILE[@]/#declare -f }"
# do
#   echo $func
# done
# for i in {5..1}
# do
#   echo $i
# done
# 
